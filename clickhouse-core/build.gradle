/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "antlr"
    id "com.google.protobuf"
}

sourceSets.main.scala {
    srcDirs += "src/main/scala-$scala_binary_version"
}

configurations {
    api {
        // workaround for https://github.com/gradle/gradle/issues/820
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-package", "xenon.clickhouse"]
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

dependencies {
    api "org.scala-lang:scala-library:$scala_version"

    antlr "org.antlr:antlr4:$antlr_version"
    api "org.antlr:antlr4-runtime:$antlr_version"

    api "org.slf4j:slf4j-api:$slf4j_version"
    api "org.apache.commons:commons-lang3:$commons_lang3_version"

    api "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    api "com.fasterxml.jackson.module:jackson-module-scala_$scala_binary_version:$jackson_version"

    api "com.google.api.grpc:proto-google-common-protos:$grpc_version"
    api("com.google.guava:guava:$guava_version") {
        // Guava has one dependency that is needed for linkage at runtime: com.google.guava:failureaccess
        exclude group: "com.google.code.findbugs", module: "jsr305"
        exclude group: "com.google.errorprone", module: "error_prone_annotations"
        exclude group: "com.google.guava", module: "listenablefuture"
        exclude group: "com.google.j2objc", module: "j2objc-annotations"
        exclude group: "org.checkerframework", module: "checker-qual"
    }
    api("io.grpc:grpc-stub:$grpc_version") {
        exclude group: "com.google.guava", module: "guava"
        exclude group: "com.google.code.findbugs", module: "jsr305"
        exclude group: "com.google.errorprone", module: "error_prone_annotations"
        exclude group: "org.codehaus.mojo", module: "animal-sniffer-annotations"
    }
    api("io.grpc:grpc-protobuf:$grpc_version") {
        exclude group: "com.google.guava", module: "guava"
        exclude group: "com.google.code.findbugs", module: "jsr305"
        exclude group: "com.google.errorprone", module: "error_prone_annotations"
        exclude group: "org.codehaus.mojo", module: "animal-sniffer-annotations"
    }
    api("io.grpc:grpc-netty-shaded:$grpc_version") {
        exclude group: "com.google.guava", module: "guava"
        exclude group: "com.google.android", module: "annotations"
        exclude group: "com.google.code.findbugs", module: "jsr305"
        exclude group: "com.google.errorprone", module: "error_prone_annotations"
        exclude group: "org.codehaus.mojo", module: "animal-sniffer-annotations"
    }

    testImplementation "org.scalatest:scalatest_$scala_binary_version:$scalatest_version"
    testRuntimeOnly("com.vladsch.flexmark:flexmark-all:$flexmark_version") {
        exclude group: "log4j", module: "log4j"
    }

    testRuntimeOnly "org.slf4j:log4j-over-slf4j:$slf4j_version"
    testRuntimeOnly "ch.qos.logback:logback-classic:$logback_version"
}
